{"ast":null,"code":"var _jsxFileName = \"/home/nico/Escritorio/STOCK/stock-charles/frontend/src/context/appContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\n\n// Creación del contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\n\n// Proveedor del contexto\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [store, setStore] = useState({\n    libros: []\n  });\n\n  // Función para obtener los libros por ISBN\n  const fetchLibroPorISBN = async isbn => {\n    try {\n      const response = await fetch(`http://localhost:5000/libros?isbn=${isbn}`);\n      if (!response.ok) {\n        throw new Error(\"No se pudo obtener el libro.\");\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error al obtener libro por ISBN:\", error);\n      throw error;\n    }\n  };\n\n  // Función para crear un libro\n  const crearLibro = async formData => {\n    try {\n      const response = await fetch(\"http://localhost:5000/libros\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Error al crear el libro.\");\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error al crear libro:\", error);\n      throw error;\n    }\n  };\n\n  // Acciones que se utilizarán en la aplicación\n  const actions = {\n    addBook: async formData => {\n      try {\n        const librosExistentes = await fetchLibroPorISBN(formData.isbn);\n        if (librosExistentes.length > 0) {\n          alert(\"El libro ya existe en la base de datos.\");\n        } else {\n          const nuevoLibro = await crearLibro(formData);\n          setStore(prev => ({\n            ...prev,\n            libros: [...prev.libros, nuevoLibro]\n          }));\n          alert(\"Libro creado con éxito.\");\n        }\n      } catch (error) {\n        console.error(\"Error al agregar libro:\", error);\n        alert(\"Ocurrió un error: \" + error.message);\n      }\n    },\n    agregarLibroCompleto: async formData => {\n      try {\n        const librosExistentes = await fetchLibroPorISBN(formData.isbn);\n        if (librosExistentes.length > 0) {\n          alert(\"Ya existe un libro con ese ISBN.\");\n          return;\n        }\n        const nuevoLibro = await crearLibro(formData);\n        setStore(prev => ({\n          ...prev,\n          libros: [...prev.libros, nuevoLibro]\n        }));\n        alert(\"Libro agregado con éxito.\");\n      } catch (error) {\n        console.error(\"Error en agregarLibroCompleto:\", error);\n        alert(\"Error al agregar libro completo: \" + error.message);\n      }\n    }\n\n    // Puedes agregar más acciones si lo necesitas\n  };\n\n  // Proveemos el contexto con el estado y las acciones\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      store,\n      actions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom Hook para consumir el contexto\n_s(AppProvider, \"oImWOiB6TO0PAOUCmy+q1F4i5bI=\");\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","store","setStore","libros","fetchLibroPorISBN","isbn","response","fetch","ok","Error","json","error","console","crearLibro","formData","method","headers","body","JSON","stringify","errorData","actions","addBook","librosExistentes","length","alert","nuevoLibro","prev","message","agregarLibroCompleto","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","$RefreshReg$"],"sources":["/home/nico/Escritorio/STOCK/stock-charles/frontend/src/context/appContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\n\n// Creación del contexto\nexport const AppContext = createContext();\n\n// Proveedor del contexto\nexport const AppProvider = ({ children }) => {\n  const [store, setStore] = useState({\n    libros: [],\n  });\n\n  // Función para obtener los libros por ISBN\n  const fetchLibroPorISBN = async (isbn) => {\n    try {\n      const response = await fetch(`http://localhost:5000/libros?isbn=${isbn}`);\n      if (!response.ok) {\n        throw new Error(\"No se pudo obtener el libro.\");\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error al obtener libro por ISBN:\", error);\n      throw error;\n    }\n  };\n\n  // Función para crear un libro\n  const crearLibro = async (formData) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/libros\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Error al crear el libro.\");\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error al crear libro:\", error);\n      throw error;\n    }\n  };\n\n  // Acciones que se utilizarán en la aplicación\n  const actions = {\n    addBook: async (formData) => {\n      try {\n        const librosExistentes = await fetchLibroPorISBN(formData.isbn);\n\n        if (librosExistentes.length > 0) {\n          alert(\"El libro ya existe en la base de datos.\");\n        } else {\n          const nuevoLibro = await crearLibro(formData);\n          setStore((prev) => ({\n            ...prev,\n            libros: [...prev.libros, nuevoLibro],\n          }));\n          alert(\"Libro creado con éxito.\");\n        }\n      } catch (error) {\n        console.error(\"Error al agregar libro:\", error);\n        alert(\"Ocurrió un error: \" + error.message);\n      }\n    },\n\n    agregarLibroCompleto: async (formData) => {\n      try {\n        const librosExistentes = await fetchLibroPorISBN(formData.isbn);\n\n        if (librosExistentes.length > 0) {\n          alert(\"Ya existe un libro con ese ISBN.\");\n          return;\n        }\n\n        const nuevoLibro = await crearLibro(formData);\n\n        setStore((prev) => ({\n          ...prev,\n          libros: [...prev.libros, nuevoLibro],\n        }));\n\n        alert(\"Libro agregado con éxito.\");\n      } catch (error) {\n        console.error(\"Error en agregarLibroCompleto:\", error);\n        alert(\"Error al agregar libro completo: \" + error.message);\n      }\n    },\n\n    // Puedes agregar más acciones si lo necesitas\n  };\n\n  // Proveemos el contexto con el estado y las acciones\n  return (\n    <AppContext.Provider value={{ store, actions }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n// Custom Hook para consumir el contexto\nexport const useAppContext = () => useContext(AppContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}