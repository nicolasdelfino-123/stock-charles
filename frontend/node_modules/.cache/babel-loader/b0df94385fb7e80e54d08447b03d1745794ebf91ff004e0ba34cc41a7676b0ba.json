{"ast":null,"code":"var _jsxFileName = \"/home/nico/Escritorio/STOCK/stock-charles/frontend/src/context/appContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// context/appContext.js\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [store, setStore] = useState({\n    libros: []\n  });\n  const actions = {\n    addBook: async formData => {\n      try {\n        // Verificamos si el libro ya existe\n        const response = await fetch(`http://localhost:5000/libros?isbn=${formData.isbn}`);\n        const data = await response.json();\n        if (data.length > 0) {\n          alert(\"El libro ya existe en la base de datos.\");\n        } else {\n          // Lo creamos\n          const crearLibro = await fetch(\"http://localhost:5000/libros\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(formData)\n          });\n          if (crearLibro.ok) {\n            const nuevoLibro = await crearLibro.json();\n            setStore(prev => ({\n              ...prev,\n              libros: [...prev.libros, nuevoLibro]\n            }));\n            alert(\"Libro creado con éxito.\");\n          } else {\n            const errorData = await crearLibro.json();\n            alert(errorData.error || \"Error al crear el libro.\");\n          }\n        }\n      } catch (error) {\n        console.error(\"Error al agregar libro:\", error);\n        alert(\"Ocurrió un error: \" + error.message);\n      }\n    }\n\n    // Podés agregar más acciones acá (eliminar, editar, etc.)\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      store,\n      actions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"oImWOiB6TO0PAOUCmy+q1F4i5bI=\");\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","store","setStore","libros","actions","addBook","formData","response","fetch","isbn","data","json","length","alert","crearLibro","method","headers","body","JSON","stringify","ok","nuevoLibro","prev","errorData","error","console","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","$RefreshReg$"],"sources":["/home/nico/Escritorio/STOCK/stock-charles/frontend/src/context/appContext.js"],"sourcesContent":["// context/appContext.js\nimport React, { createContext, useContext, useState } from \"react\";\n\nconst AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n  const [store, setStore] = useState({\n    libros: [],\n  });\n\n  const actions = {\n    addBook: async (formData) => {\n      try {\n        // Verificamos si el libro ya existe\n        const response = await fetch(\n          `http://localhost:5000/libros?isbn=${formData.isbn}`\n        );\n        const data = await response.json();\n\n        if (data.length > 0) {\n          alert(\"El libro ya existe en la base de datos.\");\n        } else {\n          // Lo creamos\n          const crearLibro = await fetch(\"http://localhost:5000/libros\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(formData),\n          });\n\n          if (crearLibro.ok) {\n            const nuevoLibro = await crearLibro.json();\n            setStore((prev) => ({\n              ...prev,\n              libros: [...prev.libros, nuevoLibro],\n            }));\n            alert(\"Libro creado con éxito.\");\n          } else {\n            const errorData = await crearLibro.json();\n            alert(errorData.error || \"Error al crear el libro.\");\n          }\n        }\n      } catch (error) {\n        console.error(\"Error al agregar libro:\", error);\n        alert(\"Ocurrió un error: \" + error.message);\n      }\n    },\n\n    // Podés agregar más acciones acá (eliminar, editar, etc.)\n  };\n\n  return (\n    <AppContext.Provider value={{ store, actions }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => useContext(AppContext);\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,UAAU,gBAAGL,aAAa,CAAC,CAAC;AAElC,OAAO,MAAMM,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC;IACjCS,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAG;IACdC,OAAO,EAAE,MAAOC,QAAQ,IAAK;MAC3B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qCAAqCF,QAAQ,CAACG,IAAI,EACpD,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAElC,IAAID,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;UACnBC,KAAK,CAAC,yCAAyC,CAAC;QAClD,CAAC,MAAM;UACL;UACA,MAAMC,UAAU,GAAG,MAAMN,KAAK,CAAC,8BAA8B,EAAE;YAC7DO,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,QAAQ;UAC/B,CAAC,CAAC;UAEF,IAAIQ,UAAU,CAACM,EAAE,EAAE;YACjB,MAAMC,UAAU,GAAG,MAAMP,UAAU,CAACH,IAAI,CAAC,CAAC;YAC1CT,QAAQ,CAAEoB,IAAI,KAAM;cAClB,GAAGA,IAAI;cACPnB,MAAM,EAAE,CAAC,GAAGmB,IAAI,CAACnB,MAAM,EAAEkB,UAAU;YACrC,CAAC,CAAC,CAAC;YACHR,KAAK,CAAC,yBAAyB,CAAC;UAClC,CAAC,MAAM;YACL,MAAMU,SAAS,GAAG,MAAMT,UAAU,CAACH,IAAI,CAAC,CAAC;YACzCE,KAAK,CAACU,SAAS,CAACC,KAAK,IAAI,0BAA0B,CAAC;UACtD;QACF;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CX,KAAK,CAAC,oBAAoB,GAAGW,KAAK,CAACE,OAAO,CAAC;MAC7C;IACF;;IAEA;EACF,CAAC;EAED,oBACE9B,OAAA,CAACC,UAAU,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAE3B,KAAK;MAAEG;IAAQ,CAAE;IAAAL,QAAA,EAC5CA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAAChC,EAAA,CApDWF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAsDxB,OAAO,MAAMoC,aAAa,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM1C,UAAU,CAACI,UAAU,CAAC;AAAA;AAACsC,GAAA,CAA7CD,aAAa;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}