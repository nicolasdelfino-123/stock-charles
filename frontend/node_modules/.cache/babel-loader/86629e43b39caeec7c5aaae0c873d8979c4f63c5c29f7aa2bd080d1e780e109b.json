{"ast":null,"code":"var _jsxFileName = \"/home/nico/Escritorio/STOCK/stock-charles/frontend/src/context/appContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { load } from \"cheerio\"; // Cambiamos el import de cheerio\n\n// Creamos el contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\n\n// Proveedor del contexto\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  // Estado global (store)\n  const [libros, setLibros] = useState([]);\n  const [mensaje, setMensaje] = useState(\"\");\n\n  // Cargar libros al iniciar\n  useEffect(() => {\n    actions.fetchLibros();\n  }, []);\n\n  // Acciones (actions)\n  const store = {\n    libros,\n    mensaje\n  };\n  const actions = {\n    // Cargar todos los libros\n    fetchLibros: async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/libros\");\n        if (response.ok) {\n          const data = await response.json();\n          setLibros(data);\n        }\n      } catch (error) {\n        console.error(\"Error al cargar libros:\", error);\n      }\n    },\n    // Buscar libro por ISBN\n    buscarLibroPorISBN: async isbn => {\n      if (!isbn) return null;\n      try {\n        const response = await fetch(`http://localhost:5000/libros?isbn=${isbn}`);\n        const data = await response.json();\n        if (response.ok && data.length > 0) {\n          return data[0];\n        }\n        return null;\n      } catch (error) {\n        console.error(\"Error al buscar libro por ISBN:\", error);\n        return null;\n      }\n    },\n    // Actualizar libro existente\n    actualizarLibro: async (id, formData) => {\n      try {\n        const response = await fetch(`http://localhost:5000/libros/${id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(formData)\n        });\n        if (response.ok) {\n          // Actualizar la lista de libros\n          actions.fetchLibros();\n          return {\n            success: true\n          };\n        } else {\n          const errorData = await response.json();\n          return {\n            success: false,\n            error: errorData.error || \"Error al actualizar libro\"\n          };\n        }\n      } catch (error) {\n        console.error(\"Error en la solicitud de actualización:\", error);\n        return {\n          success: false,\n          error: error.message\n        };\n      }\n    },\n    // Crear nuevo libro\n    crearLibro: async formData => {\n      try {\n        const response = await fetch(\"http://localhost:5000/libros\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(formData)\n        });\n        if (response.ok) {\n          // Actualizar la lista de libros\n          actions.fetchLibros();\n          return {\n            success: true\n          };\n        } else {\n          const data = await response.json();\n          return {\n            success: false,\n            error: data.error || \"Error al crear libro\"\n          };\n        }\n      } catch (error) {\n        console.error(\"Error en la solicitud de creación:\", error);\n        return {\n          success: false,\n          error: error.message\n        };\n      }\n    },\n    // Establecer mensaje\n    setMensaje: msg => {\n      setMensaje(msg);\n    },\n    // Bajar stock de libro\n    bajarStockLibro: async (id, cantidad) => {\n      try {\n        const response = await fetch(`http://localhost:5000/bajar-libro/${id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            cantidad\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          // Actualizar la lista de libros\n          actions.fetchLibros();\n          return {\n            success: true,\n            ubicacion: data.ubicacion || \"\"\n          };\n        } else {\n          return {\n            success: false,\n            error: data.error || \"Error al bajar el stock\"\n          };\n        }\n      } catch (error) {\n        console.error(\"Error en la solicitud:\", error);\n        return {\n          success: false,\n          error: error.message\n        };\n      }\n    },\n    // Función para buscar libro en fuentes externas (scraping)\n    buscarLibroExterno: async isbn => {\n      const isbnLimpio = isbn.replace(/-/g, \"\");\n      console.log(\"BUSCANDO LIBRO EXTERNO CON ISBN:\", isbnLimpio);\n      try {\n        // 1. Primero intentamos con el scraping de librerías argentinas\n        console.log(\"INTENTANDO CON LIBRERÍAS ARGENTINAS...\");\n        const resultadoLocal = await buscarEnLibreriasArgentinas(isbnLimpio);\n        if (resultadoLocal && !resultadoLocal.error) {\n          console.log(\"DATOS OBTENIDOS DE:\", resultadoLocal.fuente, resultadoLocal);\n          return resultadoLocal;\n        }\n\n        // 2. Si no funciona, probamos con Google Books como respaldo\n        console.log(\"INTENTANDO CON GOOGLE BOOKS...\");\n        const googleResponse = await fetch(`https://www.googleapis.com/books/v1/volumes?q=isbn:${isbnLimpio}`);\n        const googleData = await googleResponse.json();\n        if (googleData.items && googleData.items.length > 0) {\n          var _libro$saleInfo, _libro$saleInfo$listP;\n          const libro = googleData.items[0].volumeInfo;\n          console.log(\"DATOS OBTENIDOS DE GOOGLE BOOKS:\", libro);\n          return {\n            titulo: libro.title || \"\",\n            autor: libro.authors ? libro.authors.join(\", \") : \"Desconocido\",\n            editorial: libro.publisher || \"Desconocida\",\n            precio: ((_libro$saleInfo = libro.saleInfo) === null || _libro$saleInfo === void 0 ? void 0 : (_libro$saleInfo$listP = _libro$saleInfo.listPrice) === null || _libro$saleInfo$listP === void 0 ? void 0 : _libro$saleInfo$listP.amount) || 0,\n            fuente: \"Google Books\"\n          };\n        }\n\n        // 3. Si tampoco funciona, probamos con Open Library\n        console.log(\"INTENTANDO CON OPEN LIBRARY...\");\n        const openLibraryResponse = await fetch(`https://openlibrary.org/api/books?bibkeys=ISBN:${isbnLimpio}&format=json&jscmd=data`);\n        const openLibraryData = await openLibraryResponse.json();\n        const openLibraryKey = `ISBN:${isbnLimpio}`;\n        if (openLibraryData[openLibraryKey]) {\n          const libro = openLibraryData[openLibraryKey];\n          console.log(\"DATOS OBTENIDOS DE OPEN LIBRARY:\", libro);\n          return {\n            titulo: libro.title || \"\",\n            autor: libro.authors ? libro.authors.map(a => a.name).join(\", \") : \"Desconocido\",\n            editorial: libro.publishers ? libro.publishers[0].name : \"Desconocida\",\n            fuente: \"Open Library\"\n          };\n        }\n        console.log(\"NO SE ENCONTRÓ EL LIBRO EN NINGUNA FUENTE\");\n        return null;\n      } catch (error) {\n        console.error(\"ERROR AL BUSCAR LIBRO EXTERNO:\", error.message);\n        return null;\n      }\n    }\n  };\n\n  // Función para buscar en librerías argentinas (usando proxy para evitar CORS)\n  const buscarEnLibreriasArgentinas = async isbn => {\n    try {\n      console.log(\"BUSCANDO EN CÚSPIDE...\");\n      const resultadoCuspide = await buscarEnCuspide(isbn);\n      if (resultadoCuspide && !resultadoCuspide.error) {\n        console.log(\"DATOS TRAIDOS DE CUSPIDE:\", resultadoCuspide);\n        return resultadoCuspide;\n      }\n      console.log(\"BUSCANDO EN SANTA FE...\");\n      const resultadoSantaFe = await buscarEnSantaFe(isbn);\n      if (resultadoSantaFe && !resultadoSantaFe.error) {\n        console.log(\"DATOS TRAIDOS DE SANTAFE:\", resultadoSantaFe);\n        return resultadoSantaFe;\n      }\n      console.log(\"BUSCANDO EN TEMATIKA...\");\n      const resultadoTematika = await buscarEnTematika(isbn);\n      if (resultadoTematika && !resultadoTematika.error) {\n        console.log(\"DATOS TRAIDOS DE TEMATIKA:\", resultadoTematika);\n        return resultadoTematika;\n      }\n      return null;\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN LIBRERÍAS ARGENTINAS:\", error);\n      return null;\n    }\n  };\n\n  // Función para buscar en Cúspide con proxy\n  const buscarEnCuspide = async isbn => {\n    try {\n      // Usamos un proxy para evitar CORS\n      const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n      const targetUrl = `https://www.cuspide.com/resultados.aspx?c=&tema=5&titulo=&autor=&isbn=${isbn}`;\n      const searchResponse = await axios.get(proxyUrl + targetUrl);\n      const $ = load(searchResponse.data);\n      const detalleUrl = $(\".product-item-link\").first().attr(\"href\");\n      if (!detalleUrl) {\n        console.log(\"LIBRO NO ENCONTRADO EN CÚSPIDE\");\n        return null;\n      }\n      const detalleResponse = await axios.get(proxyUrl + detalleUrl);\n      const $detalle = load(detalleResponse.data);\n      const titulo = $detalle(\".page-title\").text().trim();\n      const autor = $detalle(\".product-author\").text().trim();\n      const editorial = $detalle(\".product-publisher\").text().trim();\n      const precioText = $detalle(\".price\").first().text().trim();\n      const precio = parseFloat(precioText.replace(/[^\\d,]/g, \"\").replace(\",\", \".\")) || 0;\n      return {\n        titulo,\n        autor,\n        editorial,\n        precio,\n        fuente: \"Cúspide\"\n      };\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN CÚSPIDE:\", error.message);\n      return {\n        error: error.message\n      };\n    }\n  };\n\n  // Función para buscar en Librería Santa Fe con proxy\n  const buscarEnSantaFe = async isbn => {\n    try {\n      const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n      const targetUrl = `https://www.lsf.com.ar/busqueda/listaLibros.aspx?criterio=ISBN:${isbn}`;\n      const searchResponse = await axios.get(proxyUrl + targetUrl);\n      const $ = load(searchResponse.data);\n      const detalleUrl = $(\".imagen a\").first().attr(\"href\");\n      if (!detalleUrl) {\n        console.log(\"LIBRO NO ENCONTRADO EN SANTA FE\");\n        return null;\n      }\n      const urlCompleta = `https://www.lsf.com.ar${detalleUrl}`;\n      const detalleResponse = await axios.get(proxyUrl + urlCompleta);\n      const $detalle = load(detalleResponse.data);\n      const titulo = $detalle(\".titulo h1\").text().trim();\n      const autor = $detalle(\".autor a\").text().trim();\n      const editorial = $detalle(\".editorial a\").text().trim();\n      const precioText = $detalle(\".precio\").text().trim();\n      const precio = parseFloat(precioText.replace(/[^\\d,]/g, \"\").replace(\",\", \".\")) || 0;\n      return {\n        titulo,\n        autor,\n        editorial,\n        precio,\n        fuente: \"Librería Santa Fe\"\n      };\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN SANTA FE:\", error.message);\n      return {\n        error: error.message\n      };\n    }\n  };\n\n  // Función para buscar en Tematika con proxy\n  const buscarEnTematika = async isbn => {\n    try {\n      const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n      const targetUrl = `https://www.tematika.com/articulos/${isbn}`;\n      const searchResponse = await axios.get(proxyUrl + targetUrl);\n      const $ = load(searchResponse.data);\n      const titulo = $(\".product-name\").text().trim();\n      if (!titulo) {\n        console.log(\"LIBRO NO ENCONTRADO EN TEMATIKA\");\n        return null;\n      }\n      const autor = $(\".autor a\").text().trim();\n      const editorial = $(\".editorial a\").text().trim();\n      const precioText = $(\".price\").first().text().trim();\n      const precio = parseFloat(precioText.replace(/[^\\d,]/g, \"\").replace(\",\", \".\")) || 0;\n      return {\n        titulo,\n        autor,\n        editorial,\n        precio,\n        fuente: \"Tematika (Yenny/El Ateneo)\"\n      };\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN TEMATIKA:\", error.message);\n      return {\n        error: error.message\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      store,\n      actions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"z0knvvbbS6PEZK11tSJ6rQHbinU=\");\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","axios","load","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","libros","setLibros","mensaje","setMensaje","actions","fetchLibros","store","response","fetch","ok","data","json","error","console","buscarLibroPorISBN","isbn","length","actualizarLibro","id","formData","method","headers","body","JSON","stringify","success","errorData","message","crearLibro","msg","bajarStockLibro","cantidad","ubicacion","buscarLibroExterno","isbnLimpio","replace","log","resultadoLocal","buscarEnLibreriasArgentinas","fuente","googleResponse","googleData","items","_libro$saleInfo","_libro$saleInfo$listP","libro","volumeInfo","titulo","title","autor","authors","join","editorial","publisher","precio","saleInfo","listPrice","amount","openLibraryResponse","openLibraryData","openLibraryKey","map","a","name","publishers","resultadoCuspide","buscarEnCuspide","resultadoSantaFe","buscarEnSantaFe","resultadoTematika","buscarEnTematika","proxyUrl","targetUrl","searchResponse","get","$","detalleUrl","first","attr","detalleResponse","$detalle","text","trim","precioText","parseFloat","urlCompleta","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","$RefreshReg$"],"sources":["/home/nico/Escritorio/STOCK/stock-charles/frontend/src/context/appContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { load } from \"cheerio\"; // Cambiamos el import de cheerio\n\n// Creamos el contexto\nexport const AppContext = createContext();\n\n// Proveedor del contexto\nexport const AppProvider = ({ children }) => {\n  // Estado global (store)\n  const [libros, setLibros] = useState([]);\n  const [mensaje, setMensaje] = useState(\"\");\n\n  // Cargar libros al iniciar\n  useEffect(() => {\n    actions.fetchLibros();\n  }, []);\n\n  // Acciones (actions)\n  const store = {\n    libros,\n    mensaje,\n  };\n\n  const actions = {\n    // Cargar todos los libros\n    fetchLibros: async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/libros\");\n        if (response.ok) {\n          const data = await response.json();\n          setLibros(data);\n        }\n      } catch (error) {\n        console.error(\"Error al cargar libros:\", error);\n      }\n    },\n\n    // Buscar libro por ISBN\n    buscarLibroPorISBN: async (isbn) => {\n      if (!isbn) return null;\n\n      try {\n        const response = await fetch(\n          `http://localhost:5000/libros?isbn=${isbn}`\n        );\n        const data = await response.json();\n\n        if (response.ok && data.length > 0) {\n          return data[0];\n        }\n        return null;\n      } catch (error) {\n        console.error(\"Error al buscar libro por ISBN:\", error);\n        return null;\n      }\n    },\n\n    // Actualizar libro existente\n    actualizarLibro: async (id, formData) => {\n      try {\n        const response = await fetch(`http://localhost:5000/libros/${id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formData),\n        });\n\n        if (response.ok) {\n          // Actualizar la lista de libros\n          actions.fetchLibros();\n          return { success: true };\n        } else {\n          const errorData = await response.json();\n          return {\n            success: false,\n            error: errorData.error || \"Error al actualizar libro\",\n          };\n        }\n      } catch (error) {\n        console.error(\"Error en la solicitud de actualización:\", error);\n        return { success: false, error: error.message };\n      }\n    },\n\n    // Crear nuevo libro\n    crearLibro: async (formData) => {\n      try {\n        const response = await fetch(\"http://localhost:5000/libros\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formData),\n        });\n\n        if (response.ok) {\n          // Actualizar la lista de libros\n          actions.fetchLibros();\n          return { success: true };\n        } else {\n          const data = await response.json();\n          return {\n            success: false,\n            error: data.error || \"Error al crear libro\",\n          };\n        }\n      } catch (error) {\n        console.error(\"Error en la solicitud de creación:\", error);\n        return { success: false, error: error.message };\n      }\n    },\n\n    // Establecer mensaje\n    setMensaje: (msg) => {\n      setMensaje(msg);\n    },\n\n    // Bajar stock de libro\n    bajarStockLibro: async (id, cantidad) => {\n      try {\n        const response = await fetch(\n          `http://localhost:5000/bajar-libro/${id}`,\n          {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ cantidad }),\n          }\n        );\n\n        const data = await response.json();\n\n        if (response.ok) {\n          // Actualizar la lista de libros\n          actions.fetchLibros();\n          return {\n            success: true,\n            ubicacion: data.ubicacion || \"\",\n          };\n        } else {\n          return {\n            success: false,\n            error: data.error || \"Error al bajar el stock\",\n          };\n        }\n      } catch (error) {\n        console.error(\"Error en la solicitud:\", error);\n        return { success: false, error: error.message };\n      }\n    },\n\n    // Función para buscar libro en fuentes externas (scraping)\n    buscarLibroExterno: async (isbn) => {\n      const isbnLimpio = isbn.replace(/-/g, \"\");\n      console.log(\"BUSCANDO LIBRO EXTERNO CON ISBN:\", isbnLimpio);\n\n      try {\n        // 1. Primero intentamos con el scraping de librerías argentinas\n        console.log(\"INTENTANDO CON LIBRERÍAS ARGENTINAS...\");\n        const resultadoLocal = await buscarEnLibreriasArgentinas(isbnLimpio);\n\n        if (resultadoLocal && !resultadoLocal.error) {\n          console.log(\n            \"DATOS OBTENIDOS DE:\",\n            resultadoLocal.fuente,\n            resultadoLocal\n          );\n          return resultadoLocal;\n        }\n\n        // 2. Si no funciona, probamos con Google Books como respaldo\n        console.log(\"INTENTANDO CON GOOGLE BOOKS...\");\n        const googleResponse = await fetch(\n          `https://www.googleapis.com/books/v1/volumes?q=isbn:${isbnLimpio}`\n        );\n        const googleData = await googleResponse.json();\n\n        if (googleData.items && googleData.items.length > 0) {\n          const libro = googleData.items[0].volumeInfo;\n          console.log(\"DATOS OBTENIDOS DE GOOGLE BOOKS:\", libro);\n          return {\n            titulo: libro.title || \"\",\n            autor: libro.authors ? libro.authors.join(\", \") : \"Desconocido\",\n            editorial: libro.publisher || \"Desconocida\",\n            precio: libro.saleInfo?.listPrice?.amount || 0,\n            fuente: \"Google Books\",\n          };\n        }\n\n        // 3. Si tampoco funciona, probamos con Open Library\n        console.log(\"INTENTANDO CON OPEN LIBRARY...\");\n        const openLibraryResponse = await fetch(\n          `https://openlibrary.org/api/books?bibkeys=ISBN:${isbnLimpio}&format=json&jscmd=data`\n        );\n        const openLibraryData = await openLibraryResponse.json();\n        const openLibraryKey = `ISBN:${isbnLimpio}`;\n\n        if (openLibraryData[openLibraryKey]) {\n          const libro = openLibraryData[openLibraryKey];\n          console.log(\"DATOS OBTENIDOS DE OPEN LIBRARY:\", libro);\n          return {\n            titulo: libro.title || \"\",\n            autor: libro.authors\n              ? libro.authors.map((a) => a.name).join(\", \")\n              : \"Desconocido\",\n            editorial: libro.publishers\n              ? libro.publishers[0].name\n              : \"Desconocida\",\n            fuente: \"Open Library\",\n          };\n        }\n\n        console.log(\"NO SE ENCONTRÓ EL LIBRO EN NINGUNA FUENTE\");\n        return null;\n      } catch (error) {\n        console.error(\"ERROR AL BUSCAR LIBRO EXTERNO:\", error.message);\n        return null;\n      }\n    },\n  };\n\n  // Función para buscar en librerías argentinas (usando proxy para evitar CORS)\n  const buscarEnLibreriasArgentinas = async (isbn) => {\n    try {\n      console.log(\"BUSCANDO EN CÚSPIDE...\");\n      const resultadoCuspide = await buscarEnCuspide(isbn);\n      if (resultadoCuspide && !resultadoCuspide.error) {\n        console.log(\"DATOS TRAIDOS DE CUSPIDE:\", resultadoCuspide);\n        return resultadoCuspide;\n      }\n\n      console.log(\"BUSCANDO EN SANTA FE...\");\n      const resultadoSantaFe = await buscarEnSantaFe(isbn);\n      if (resultadoSantaFe && !resultadoSantaFe.error) {\n        console.log(\"DATOS TRAIDOS DE SANTAFE:\", resultadoSantaFe);\n        return resultadoSantaFe;\n      }\n\n      console.log(\"BUSCANDO EN TEMATIKA...\");\n      const resultadoTematika = await buscarEnTematika(isbn);\n      if (resultadoTematika && !resultadoTematika.error) {\n        console.log(\"DATOS TRAIDOS DE TEMATIKA:\", resultadoTematika);\n        return resultadoTematika;\n      }\n\n      return null;\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN LIBRERÍAS ARGENTINAS:\", error);\n      return null;\n    }\n  };\n\n  // Función para buscar en Cúspide con proxy\n  const buscarEnCuspide = async (isbn) => {\n    try {\n      // Usamos un proxy para evitar CORS\n      const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n      const targetUrl = `https://www.cuspide.com/resultados.aspx?c=&tema=5&titulo=&autor=&isbn=${isbn}`;\n\n      const searchResponse = await axios.get(proxyUrl + targetUrl);\n      const $ = load(searchResponse.data);\n\n      const detalleUrl = $(\".product-item-link\").first().attr(\"href\");\n\n      if (!detalleUrl) {\n        console.log(\"LIBRO NO ENCONTRADO EN CÚSPIDE\");\n        return null;\n      }\n\n      const detalleResponse = await axios.get(proxyUrl + detalleUrl);\n      const $detalle = load(detalleResponse.data);\n\n      const titulo = $detalle(\".page-title\").text().trim();\n      const autor = $detalle(\".product-author\").text().trim();\n      const editorial = $detalle(\".product-publisher\").text().trim();\n      const precioText = $detalle(\".price\").first().text().trim();\n      const precio =\n        parseFloat(precioText.replace(/[^\\d,]/g, \"\").replace(\",\", \".\")) || 0;\n\n      return {\n        titulo,\n        autor,\n        editorial,\n        precio,\n        fuente: \"Cúspide\",\n      };\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN CÚSPIDE:\", error.message);\n      return { error: error.message };\n    }\n  };\n\n  // Función para buscar en Librería Santa Fe con proxy\n  const buscarEnSantaFe = async (isbn) => {\n    try {\n      const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n      const targetUrl = `https://www.lsf.com.ar/busqueda/listaLibros.aspx?criterio=ISBN:${isbn}`;\n\n      const searchResponse = await axios.get(proxyUrl + targetUrl);\n      const $ = load(searchResponse.data);\n\n      const detalleUrl = $(\".imagen a\").first().attr(\"href\");\n\n      if (!detalleUrl) {\n        console.log(\"LIBRO NO ENCONTRADO EN SANTA FE\");\n        return null;\n      }\n\n      const urlCompleta = `https://www.lsf.com.ar${detalleUrl}`;\n      const detalleResponse = await axios.get(proxyUrl + urlCompleta);\n      const $detalle = load(detalleResponse.data);\n\n      const titulo = $detalle(\".titulo h1\").text().trim();\n      const autor = $detalle(\".autor a\").text().trim();\n      const editorial = $detalle(\".editorial a\").text().trim();\n      const precioText = $detalle(\".precio\").text().trim();\n      const precio =\n        parseFloat(precioText.replace(/[^\\d,]/g, \"\").replace(\",\", \".\")) || 0;\n\n      return {\n        titulo,\n        autor,\n        editorial,\n        precio,\n        fuente: \"Librería Santa Fe\",\n      };\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN SANTA FE:\", error.message);\n      return { error: error.message };\n    }\n  };\n\n  // Función para buscar en Tematika con proxy\n  const buscarEnTematika = async (isbn) => {\n    try {\n      const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n      const targetUrl = `https://www.tematika.com/articulos/${isbn}`;\n\n      const searchResponse = await axios.get(proxyUrl + targetUrl);\n      const $ = load(searchResponse.data);\n\n      const titulo = $(\".product-name\").text().trim();\n\n      if (!titulo) {\n        console.log(\"LIBRO NO ENCONTRADO EN TEMATIKA\");\n        return null;\n      }\n\n      const autor = $(\".autor a\").text().trim();\n      const editorial = $(\".editorial a\").text().trim();\n      const precioText = $(\".price\").first().text().trim();\n      const precio =\n        parseFloat(precioText.replace(/[^\\d,]/g, \"\").replace(\",\", \".\")) || 0;\n\n      return {\n        titulo,\n        autor,\n        editorial,\n        precio,\n        fuente: \"Tematika (Yenny/El Ateneo)\",\n      };\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN TEMATIKA:\", error.message);\n      return { error: error.message };\n    }\n  };\n\n  return (\n    <AppContext.Provider value={{ store, actions }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => useContext(AppContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}