{"ast":null,"code":"var _jsxFileName = \"/home/nico/Escritorio/STOCK/stock-charles/frontend/src/context/appContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [store, setStore] = useState({\n    libros: []\n  });\n  const fetchLibroPorISBN = async isbn => {\n    const response = await fetch(`http://localhost:5000/libros?isbn=${isbn}`);\n    return await response.json();\n  };\n  const crearLibro = async formData => {\n    const response = await fetch(\"http://localhost:5000/libros\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || \"Error al crear el libro.\");\n    }\n    return await response.json();\n  };\n  const actions = {\n    addBook: async formData => {\n      try {\n        const librosExistentes = await fetchLibroPorISBN(formData.isbn);\n        if (librosExistentes.length > 0) {\n          alert(\"El libro ya existe en la base de datos.\");\n        } else {\n          const nuevoLibro = await crearLibro(formData);\n          setStore(prev => ({\n            ...prev,\n            libros: [...prev.libros, nuevoLibro]\n          }));\n          alert(\"Libro creado con éxito.\");\n        }\n      } catch (error) {\n        console.error(\"Error al agregar libro:\", error);\n        alert(\"Ocurrió un error: \" + error.message);\n      }\n    },\n    agregarLibroCompleto: async formData => {\n      try {\n        const librosExistentes = await fetchLibroPorISBN(formData.isbn);\n        if (librosExistentes.length > 0) {\n          alert(\"Ya existe un libro con ese ISBN.\");\n          return;\n        }\n        const nuevoLibro = await crearLibro(formData);\n        setStore(prev => ({\n          ...prev,\n          libros: [...prev.libros, nuevoLibro]\n        }));\n        alert(\"Libro agregado con éxito.\");\n      } catch (error) {\n        console.error(\"Error en agregarLibroCompleto:\", error);\n        alert(\"Error al agregar libro completo: \" + error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      store,\n      actions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"oImWOiB6TO0PAOUCmy+q1F4i5bI=\");\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","store","setStore","libros","fetchLibroPorISBN","isbn","response","fetch","json","crearLibro","formData","method","headers","body","JSON","stringify","ok","errorData","Error","error","actions","addBook","librosExistentes","length","alert","nuevoLibro","prev","console","message","agregarLibroCompleto","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","$RefreshReg$"],"sources":["/home/nico/Escritorio/STOCK/stock-charles/frontend/src/context/appContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n\nexport const AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n  const [store, setStore] = useState({\n    libros: [],\n  });\n\n  const fetchLibroPorISBN = async (isbn) => {\n    const response = await fetch(`http://localhost:5000/libros?isbn=${isbn}`);\n    return await response.json();\n  };\n\n  const crearLibro = async (formData) => {\n    const response = await fetch(\"http://localhost:5000/libros\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || \"Error al crear el libro.\");\n    }\n\n    return await response.json();\n  };\n\n  const actions = {\n    addBook: async (formData) => {\n      try {\n        const librosExistentes = await fetchLibroPorISBN(formData.isbn);\n\n        if (librosExistentes.length > 0) {\n          alert(\"El libro ya existe en la base de datos.\");\n        } else {\n          const nuevoLibro = await crearLibro(formData);\n          setStore((prev) => ({\n            ...prev,\n            libros: [...prev.libros, nuevoLibro],\n          }));\n          alert(\"Libro creado con éxito.\");\n        }\n      } catch (error) {\n        console.error(\"Error al agregar libro:\", error);\n        alert(\"Ocurrió un error: \" + error.message);\n      }\n    },\n\n    agregarLibroCompleto: async (formData) => {\n      try {\n        const librosExistentes = await fetchLibroPorISBN(formData.isbn);\n\n        if (librosExistentes.length > 0) {\n          alert(\"Ya existe un libro con ese ISBN.\");\n          return;\n        }\n\n        const nuevoLibro = await crearLibro(formData);\n\n        setStore((prev) => ({\n          ...prev,\n          libros: [...prev.libros, nuevoLibro],\n        }));\n\n        alert(\"Libro agregado con éxito.\");\n      } catch (error) {\n        console.error(\"Error en agregarLibroCompleto:\", error);\n        alert(\"Error al agregar libro completo: \" + error.message);\n      }\n    },\n  };\n\n  return (\n    <AppContext.Provider value={{ store, actions }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => useContext(AppContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}