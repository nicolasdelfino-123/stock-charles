{"ast":null,"code":"var _jsxFileName = \"/home/nico/Escritorio/STOCK/stock-charles/frontend/src/context/appContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [libros, setLibros] = useState([]);\n  const [mensaje, setMensaje] = useState(\"\");\n\n  // Función para buscar en librerías argentinas usando nuestro backend\n  const buscarEnLibreriasArgentinas = async isbn => {\n    try {\n      const [cuspide, santafe, tematika] = await Promise.allSettled([buscarEnCuspide(isbn), buscarEnSantaFe(isbn), buscarEnTematika(isbn)]);\n      if (cuspide.status === \"fulfilled\" && cuspide.value) {\n        console.log(\"DATOS TRAIDOS DE CUSPIDE:\", cuspide.value);\n        return cuspide.value;\n      }\n      if (santafe.status === \"fulfilled\" && santafe.value) {\n        console.log(\"DATOS TRAIDOS DE SANTAFE:\", santafe.value);\n        return santafe.value;\n      }\n      if (tematika.status === \"fulfilled\" && tematika.value) {\n        console.log(\"DATOS TRAIDOS DE TEMATIKA:\", tematika.value);\n        return tematika.value;\n      }\n      return null;\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN LIBRERÍAS ARGENTINAS:\", error);\n      return null;\n    }\n  };\n  const buscarEnCuspide = async isbn => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/cuspide/${isbn}`);\n      if (!response.ok) return null;\n      return await response.json();\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN CÚSPIDE:\", error);\n      return null;\n    }\n  };\n  const buscarEnSantaFe = async isbn => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/santafe/${isbn}`);\n      if (!response.ok) return null;\n      return await response.json();\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN SANTA FE:\", error);\n      return null;\n    }\n  };\n  const buscarEnTematika = async isbn => {\n    try {\n      // Modificado para que se ajuste al backend\n      const response = await fetch(`http://localhost:5001/api/tematika/${isbn}`);\n      if (!response.ok) return null;\n      return await response.json();\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN TEMATIKA:\", error);\n      return null;\n    }\n  };\n  const actions = useMemo(() => ({\n    fetchLibros: async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/libros\");\n        if (response.ok) {\n          const data = await response.json();\n          setLibros(data);\n        }\n      } catch (error) {\n        console.error(\"Error al cargar libros:\", error);\n      }\n    },\n    buscarLibroPorISBN: async isbn => {\n      if (!isbn) return null;\n      try {\n        const response = await fetch(`http://localhost:5000/libros?isbn=${isbn}`);\n        const data = await response.json();\n        if (response.ok && data.length > 0) return data[0];\n        return null;\n      } catch (error) {\n        console.error(\"Error al buscar libro por ISBN:\", error);\n        return null;\n      }\n    },\n    actualizarLibro: async (id, formData) => {\n      try {\n        const response = await fetch(`http://localhost:5000/libros/${id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(formData)\n        });\n        if (response.ok) {\n          await actions.fetchLibros();\n          return {\n            success: true\n          };\n        } else {\n          const errorData = await response.json();\n          return {\n            success: false,\n            error: errorData.error || \"Error al actualizar libro\"\n          };\n        }\n      } catch (error) {\n        console.error(\"Error en la solicitud de actualización:\", error);\n        return {\n          success: false,\n          error: error.message\n        };\n      }\n    },\n    crearLibro: async formData => {\n      try {\n        const response = await fetch(\"http://localhost:5000/libros\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(formData)\n        });\n        if (response.ok) {\n          await actions.fetchLibros();\n          return {\n            success: true\n          };\n        } else {\n          const data = await response.json();\n          return {\n            success: false,\n            error: data.error || \"Error al crear libro\"\n          };\n        }\n      } catch (error) {\n        console.error(\"Error en la solicitud de creación:\", error);\n        return {\n          success: false,\n          error: error.message\n        };\n      }\n    },\n    setMensaje: msg => {\n      setMensaje(msg);\n    },\n    bajarStockLibro: async (id, cantidad) => {\n      try {\n        const response = await fetch(`http://localhost:5000/bajar-libro/${id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            cantidad\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          await actions.fetchLibros();\n          return {\n            success: true,\n            ubicacion: data.ubicacion || \"\"\n          };\n        } else {\n          return {\n            success: false,\n            error: data.error || \"Error al bajar el stock\"\n          };\n        }\n      } catch (error) {\n        console.error(\"Error en la solicitud:\", error);\n        return {\n          success: false,\n          error: error.message\n        };\n      }\n    },\n    buscarEnLibrerias: async isbn => {\n      try {\n        const fuentes = [\"cuspide\", \"santafe\", \"tematika\"];\n        const resultados = [];\n        for (let fuente of fuentes) {\n          const res = await fetch(`http://localhost:5001/api/${fuente}/${isbn}`);\n          if (res.ok) {\n            const data = await res.json();\n            resultados.push(data);\n          }\n        }\n        return resultados;\n      } catch (error) {\n        console.error(\"Error al buscar en librerías:\", error);\n        return [];\n      }\n    },\n    buscarLibroExterno: async isbn => {\n      const isbnLimpio = isbn.replace(/-/g, \"\");\n      console.log(\"BUSCANDO LIBRO EXTERNO CON ISBN:\", isbnLimpio);\n      try {\n        console.log(\"INTENTANDO CON LIBRERÍAS ARGENTINAS...\");\n        const resultadoLocal = await buscarEnLibreriasArgentinas(isbnLimpio);\n        if (resultadoLocal && !resultadoLocal.error) {\n          console.log(\"DATOS OBTENIDOS DE:\", resultadoLocal.fuente, resultadoLocal);\n          return resultadoLocal;\n        }\n        console.log(\"INTENTANDO CON GOOGLE BOOKS...\");\n        const googleResponse = await fetch(`https://www.googleapis.com/books/v1/volumes?q=isbn:${isbnLimpio}`);\n        const googleData = await googleResponse.json();\n        if (googleData.items && googleData.items.length > 0) {\n          var _libro$saleInfo, _libro$saleInfo$listP;\n          const libro = googleData.items[0].volumeInfo;\n          console.log(\"DATOS OBTENIDOS DE GOOGLE BOOKS:\", libro);\n          return {\n            titulo: libro.title || \"\",\n            autor: libro.authors ? libro.authors.join(\", \") : \"Desconocido\",\n            editorial: libro.publisher || \"Desconocida\",\n            precio: ((_libro$saleInfo = libro.saleInfo) === null || _libro$saleInfo === void 0 ? void 0 : (_libro$saleInfo$listP = _libro$saleInfo.listPrice) === null || _libro$saleInfo$listP === void 0 ? void 0 : _libro$saleInfo$listP.amount) || 0,\n            fuente: \"Google Books\"\n          };\n        }\n        console.log(\"NO SE ENCONTRÓ EL LIBRO EN NINGUNA FUENTE\");\n        return null;\n      } catch (error) {\n        console.error(\"ERROR AL BUSCAR LIBRO EXTERNO:\", error.message);\n        return null;\n      }\n    }\n  }), []);\n  useEffect(() => {\n    actions.fetchLibros();\n  }, [actions]);\n  const store = {\n    libros,\n    mensaje\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      store,\n      actions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personalizado para usar contexto\n_s(AppProvider, \"8PYbRjfrigZBbOdMHj6J3p1+Kmw=\");\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","useMemo","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","libros","setLibros","mensaje","setMensaje","buscarEnLibreriasArgentinas","isbn","cuspide","santafe","tematika","Promise","allSettled","buscarEnCuspide","buscarEnSantaFe","buscarEnTematika","status","value","console","log","error","response","fetch","ok","json","actions","fetchLibros","data","buscarLibroPorISBN","length","actualizarLibro","id","formData","method","headers","body","JSON","stringify","success","errorData","message","crearLibro","msg","bajarStockLibro","cantidad","ubicacion","buscarEnLibrerias","fuentes","resultados","fuente","res","push","buscarLibroExterno","isbnLimpio","replace","resultadoLocal","googleResponse","googleData","items","_libro$saleInfo","_libro$saleInfo$listP","libro","volumeInfo","titulo","title","autor","authors","join","editorial","publisher","precio","saleInfo","listPrice","amount","store","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","$RefreshReg$"],"sources":["/home/nico/Escritorio/STOCK/stock-charles/frontend/src/context/appContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect, useMemo } from \"react\";\n\nexport const AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n  const [libros, setLibros] = useState([]);\n  const [mensaje, setMensaje] = useState(\"\");\n\n  // Función para buscar en librerías argentinas usando nuestro backend\n  const buscarEnLibreriasArgentinas = async (isbn) => {\n    try {\n      const [cuspide, santafe, tematika] = await Promise.allSettled([\n        buscarEnCuspide(isbn),\n        buscarEnSantaFe(isbn),\n        buscarEnTematika(isbn),\n      ]);\n\n      if (cuspide.status === \"fulfilled\" && cuspide.value) {\n        console.log(\"DATOS TRAIDOS DE CUSPIDE:\", cuspide.value);\n        return cuspide.value;\n      }\n      if (santafe.status === \"fulfilled\" && santafe.value) {\n        console.log(\"DATOS TRAIDOS DE SANTAFE:\", santafe.value);\n        return santafe.value;\n      }\n      if (tematika.status === \"fulfilled\" && tematika.value) {\n        console.log(\"DATOS TRAIDOS DE TEMATIKA:\", tematika.value);\n        return tematika.value;\n      }\n\n      return null;\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN LIBRERÍAS ARGENTINAS:\", error);\n      return null;\n    }\n  };\n\n  const buscarEnCuspide = async (isbn) => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/cuspide/${isbn}`);\n      if (!response.ok) return null;\n      return await response.json();\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN CÚSPIDE:\", error);\n      return null;\n    }\n  };\n\n  const buscarEnSantaFe = async (isbn) => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/santafe/${isbn}`);\n      if (!response.ok) return null;\n      return await response.json();\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN SANTA FE:\", error);\n      return null;\n    }\n  };\n\n  const buscarEnTematika = async (isbn) => {\n    try {\n      // Modificado para que se ajuste al backend\n      const response = await fetch(\n        `http://localhost:5001/api/tematika/${isbn}`\n      );\n      if (!response.ok) return null;\n      return await response.json();\n    } catch (error) {\n      console.error(\"ERROR AL BUSCAR EN TEMATIKA:\", error);\n      return null;\n    }\n  };\n\n  const actions = useMemo(\n    () => ({\n      fetchLibros: async () => {\n        try {\n          const response = await fetch(\"http://localhost:5000/libros\");\n          if (response.ok) {\n            const data = await response.json();\n            setLibros(data);\n          }\n        } catch (error) {\n          console.error(\"Error al cargar libros:\", error);\n        }\n      },\n\n      buscarLibroPorISBN: async (isbn) => {\n        if (!isbn) return null;\n        try {\n          const response = await fetch(\n            `http://localhost:5000/libros?isbn=${isbn}`\n          );\n          const data = await response.json();\n          if (response.ok && data.length > 0) return data[0];\n          return null;\n        } catch (error) {\n          console.error(\"Error al buscar libro por ISBN:\", error);\n          return null;\n        }\n      },\n\n      actualizarLibro: async (id, formData) => {\n        try {\n          const response = await fetch(`http://localhost:5000/libros/${id}`, {\n            method: \"PUT\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(formData),\n          });\n\n          if (response.ok) {\n            await actions.fetchLibros();\n            return { success: true };\n          } else {\n            const errorData = await response.json();\n            return {\n              success: false,\n              error: errorData.error || \"Error al actualizar libro\",\n            };\n          }\n        } catch (error) {\n          console.error(\"Error en la solicitud de actualización:\", error);\n          return { success: false, error: error.message };\n        }\n      },\n\n      crearLibro: async (formData) => {\n        try {\n          const response = await fetch(\"http://localhost:5000/libros\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(formData),\n          });\n\n          if (response.ok) {\n            await actions.fetchLibros();\n            return { success: true };\n          } else {\n            const data = await response.json();\n            return {\n              success: false,\n              error: data.error || \"Error al crear libro\",\n            };\n          }\n        } catch (error) {\n          console.error(\"Error en la solicitud de creación:\", error);\n          return { success: false, error: error.message };\n        }\n      },\n\n      setMensaje: (msg) => {\n        setMensaje(msg);\n      },\n\n      bajarStockLibro: async (id, cantidad) => {\n        try {\n          const response = await fetch(\n            `http://localhost:5000/bajar-libro/${id}`,\n            {\n              method: \"PUT\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ cantidad }),\n            }\n          );\n\n          const data = await response.json();\n\n          if (response.ok) {\n            await actions.fetchLibros();\n            return {\n              success: true,\n              ubicacion: data.ubicacion || \"\",\n            };\n          } else {\n            return {\n              success: false,\n              error: data.error || \"Error al bajar el stock\",\n            };\n          }\n        } catch (error) {\n          console.error(\"Error en la solicitud:\", error);\n          return { success: false, error: error.message };\n        }\n      },\n\n      buscarEnLibrerias: async (isbn) => {\n        try {\n          const fuentes = [\"cuspide\", \"santafe\", \"tematika\"];\n          const resultados = [];\n\n          for (let fuente of fuentes) {\n            const res = await fetch(\n              `http://localhost:5001/api/${fuente}/${isbn}`\n            );\n            if (res.ok) {\n              const data = await res.json();\n              resultados.push(data);\n            }\n          }\n\n          return resultados;\n        } catch (error) {\n          console.error(\"Error al buscar en librerías:\", error);\n          return [];\n        }\n      },\n\n      buscarLibroExterno: async (isbn) => {\n        const isbnLimpio = isbn.replace(/-/g, \"\");\n        console.log(\"BUSCANDO LIBRO EXTERNO CON ISBN:\", isbnLimpio);\n\n        try {\n          console.log(\"INTENTANDO CON LIBRERÍAS ARGENTINAS...\");\n          const resultadoLocal = await buscarEnLibreriasArgentinas(isbnLimpio);\n          if (resultadoLocal && !resultadoLocal.error) {\n            console.log(\n              \"DATOS OBTENIDOS DE:\",\n              resultadoLocal.fuente,\n              resultadoLocal\n            );\n            return resultadoLocal;\n          }\n\n          console.log(\"INTENTANDO CON GOOGLE BOOKS...\");\n          const googleResponse = await fetch(\n            `https://www.googleapis.com/books/v1/volumes?q=isbn:${isbnLimpio}`\n          );\n          const googleData = await googleResponse.json();\n\n          if (googleData.items && googleData.items.length > 0) {\n            const libro = googleData.items[0].volumeInfo;\n            console.log(\"DATOS OBTENIDOS DE GOOGLE BOOKS:\", libro);\n            return {\n              titulo: libro.title || \"\",\n              autor: libro.authors ? libro.authors.join(\", \") : \"Desconocido\",\n              editorial: libro.publisher || \"Desconocida\",\n              precio: libro.saleInfo?.listPrice?.amount || 0,\n              fuente: \"Google Books\",\n            };\n          }\n\n          console.log(\"NO SE ENCONTRÓ EL LIBRO EN NINGUNA FUENTE\");\n          return null;\n        } catch (error) {\n          console.error(\"ERROR AL BUSCAR LIBRO EXTERNO:\", error.message);\n          return null;\n        }\n      },\n    }),\n    []\n  );\n\n  useEffect(() => {\n    actions.fetchLibros();\n  }, [actions]);\n\n  const store = {\n    libros,\n    mensaje,\n  };\n\n  return (\n    <AppContext.Provider value={{ store, actions }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n// Hook personalizado para usar contexto\nexport const useAppContext = () => useContext(AppContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}